#!/bin/bash

@EXTRA_INIT@

outdir="out_@SIZE@_satellite"
mkdir -p "${outdir}"

# This script assumes that you have toast and all dependencies
# installed and loaded in your environment.

# Generate the focalplane file if it does not already exist.

detpix=@DETPIX@

fpfile="${outdir}/fp_${detpix}.pkl"
if [ ! -e "${fpfile}" ]; then
    toast_fake_focalplane.py --minpix ${detpix} --out "${outdir}/fp"
fi

# The executable script

ex=$(which toast_satellite_sim.py)
echo "Using ${ex}"

# Scan strategy parameters from a file

parfile="@TOPDIR@/params/satellite/sim_noise_hwp.par"

# Observations

obs_len="24.0"
obs_gap="4.0"
nobs=@NOBS@

# Map making parameters

nside="512"

# Data distribution parameters.  Group size is one process.

groupsize=1

# The commandline

com="${ex} @${parfile} \
--toast-output-dir ${outdir} \
--enable-timers --enable-timer-serialization \
--groupsize ${groupsize} \
--fp ${fpfile} \
--nside ${nside} \
--obs ${obs_len} \
--gap ${obs_gap} \
--numobs ${nobs} \
--outdir ${outdir}/out \
$@ \
"

# Use 2 processes, each with 2 threads

procs=2
threads=2

export OMP_NUM_THREADS=${threads}

run="mpirun -np ${procs}"

: ${LOG_OUT:="${outdir}/log"}
echo "${run} ${com}"
eval ${run} ${com} > ${LOG_OUT} 2>&1

for i in ${outdir}/timing_report*.out
do
    echo -e "\n--> ${i}\n" >> ${LOG_OUT}
    cat ${i} >> ${LOG_OUT}
done
