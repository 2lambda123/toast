#!/bin/bash

outdir="out_@@size@@_ground_multisite"
mkdir -p "${outdir}"

# This script assumes that you have toast and all dependencies
# installed and loaded in your environment.

# Generate the focalplane files if they do not already exist.

detpix=@@detpix@@

fpparfile="@@topdir@@/params/ground/focalplane.par"

fpfile_atacama="${outdir}/fp_atacama_${detpix}.pkl"
if [ ! -e "${fpfile_atacama}" ]; then
    toast_fake_focalplane.py @$fpparfile \
         --out "${outdir}/fp_atacama" --minpix $detpix
fi

fpfile_pole="${outdir}/fp_pole_${detpix}.pkl"
if [ ! -e "${fpfile_pole}" ]; then
    toast_fake_focalplane.py @$fpparfile \
         --out "${outdir}/fp_pole" --minpix $detpix --fov 1
fi

# Generate the schedule files if they do not already exist.

schparfile="@@topdir@@/params/ground/schedule.par"

schedulefile_atacama="${outdir}/schedule_atacama.txt"

if [ ! -e "${schedulefile_atacama}" ]; then
    toast_ground_schedule.py @$schparfile \
         --out "${schedulefile_atacama}" --patch @@patch@@ \
         --stop @@schedule_stop@@
fi

schparfile="@@topdir@@/params/ground/schedule_pole.par"

schedulefile_pole="${outdir}/schedule_pole.txt"

if [ ! -e "${schedulefile_pole}" ]; then
    toast_ground_schedule.py @$schparfile \
         --out "${schedulefile_pole}" --patch @@patch@@ \
         --stop @@schedule_stop@@
fi

# The executable script

ex=$(which toast_ground_sim.py)
echo "Using ${ex}"

# Scan strategy parameters from a file

parfile="@@topdir@@/params/ground/ground_sim_multisite.par"

# Data distribution parameters

# The commandline

com="${ex} @${parfile} \
--fp ${fpfile_atacama},${fpfile_pole} \
--schedule ${schedulefile_atacama},${schedulefile_pole} \
--out ${outdir}/out \
--atm_cache ${outdir}/atm_cache \
--atm_xstep @@cellsize@@ \
--atm_ystep @@cellsize@@ \
--atm_zstep @@cellsize@@ \
--groupsize 2 \
"

# Use 2 processes, each with 2 threads

procs=2
threads=2

export OMP_NUM_THREADS=${threads}

run="mpirun -np ${procs}"

echo "${run} ${com}"
eval ${run} ${com} > "${outdir}/log" 2>&1
